# -*- coding: utf-8 -*-
"""SVM.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BICDeIiqcPZKICMfFocr-uDs5T5PyGiR
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import make_blobs
from sklearn.svm import SVC

X,y = make_blobs(n_samples=100,centers=2,random_state = 6)
model = SVC(kernel='linear')
model.fit(X,y)

x_min,x_max = X[:,0].min()-1,X[:,0].max()+1
y_min,y_max = X[:,1].min()-1,X[:,1].max()+1
xx,yy = np.meshgrid(np.linspace(x_min,x_max,100),np.linspace(y_min,y_max,100))

Z = model.decision_function(np.c_[xx.ravel(),yy.ravel()])
Z = Z.reshape(xx.shape)

plt.figure(figsize=(8,6))

plt.scatter(X[:,0],X[:,1],c=y,cmap=plt.cm.coolwarm,s=30, edgecolors='k')

plt.scatter(X[:,0],X[:,1],c=y,cmap=plt.cm.coolwarm,s=30, edgecolors='k')
plt.contour(xx,yy,Z,levels=[0],colors='black',linestyles=['--','-','--'])

plt.scatter(model.support_vectors_[:,0],model.support_vectors_[:,1],
            s=100, facecolors='none',edgecolors='k', linewidth=1.5, label='Support Vector')
plt.title("SVM with linear kernel")
plt.xlabel("Feature 1")
plt.ylabel("Feature 2")
plt.legend()
plt.grid(True)
plt.show()

grid = np.c_[xx.ravel(),yy.ravel()]
Z = model.predict(grid)
Z = Z.reshape(xx.shape)

plt.figure(figsize=(8,6))

plt.contourf(xx,yy,Z,cmap=plt.cm.coolwarm,alpha=0.3)
plt.scatter(X[:,0],X[:,1],c=y,cmap=plt.cm.coolwarm,s=60, edgecolors='k')

plt.contourf(xx,yy,Z,cmap=plt.cm.coolwarm,alpha=0.3)
plt.scatter(X[:,0],X[:,1],c=y,cmap=plt.cm.coolwarm,s=60, edgecolors='k')
plt.scatter(model.support_vectors_[:,0],model.support_vectors_[:,1],
            s=150, facecolors='none',edgecolors='black', linewidth=1.5, label='Support Vector')
plt.title("SVM with linear kernel")
plt.xlabel("Feature 1")
plt.ylabel("Feature 2")
plt.legend()
plt.grid(True)
plt.show()

